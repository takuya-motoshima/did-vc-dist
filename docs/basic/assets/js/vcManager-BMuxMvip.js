const y=async(e=500)=>{const r=document.querySelector(".loading-overlay");r&&r.remove();const t=document.createElement("div");return t.className="loading-overlay",t.innerHTML=`
    <div class="loading-spinner">
      <svg viewBox="25 25 50 50">
        <circle class="path" cx="50" cy="50" r="20"></circle>
      </svg>
    </div>
  `,document.body.appendChild(t),new Promise(o=>{setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t),o()},e)})},a=()=>({publicKey:`mock_public_key_${Math.random().toString(36).substring(2,15)}`,privateKey:`mock_private_key_${Math.random().toString(36).substring(2,15)}`}),c=(e,r)=>{const t=JSON.stringify(e);return`eyJhbGci.${btoa(unescape(encodeURIComponent(t))).replace(/=/g,"")}.mock_signature_${Math.random().toString(36).substring(2,15)}`},l=(e,r)=>{if(!e||typeof e!="string")return!1;const t=e.split(".");return t.length!==3?!1:t[2].includes("mock_signature")&&r&&r.startsWith("mock_public_key")},f=()=>{const e=localStorage.getItem("did_registry");if(!e){const t={"did:demo:issuer-001":{publicKey:a().publicKey,createdAt:new Date().toISOString()}};return localStorage.setItem("did_registry",JSON.stringify(t)),console.log("DIDレジストリ初期化完了（実稼働では分散台帳に保存）"),t}return JSON.parse(e)},u=e=>{try{const r=localStorage.getItem("did_registry");if(!r)return console.error("DIDレジストリが見つかりません（実稼働では分散台帳から取得）"),null;const o=JSON.parse(r)[e];return!o||!o.publicKey?(console.error(`DID公開鍵が見つかりません: ${e}`),null):o.publicKey}catch(r){return console.error("公開鍵取得エラー:",r),null}},d=()=>`did:key:z6Mk${Math.random().toString(36).substring(2,15)}`,m=e=>{const r=new Date().toISOString(),t=new Date;t.setFullYear(t.getFullYear()+1);const o=d(),n={"@context":["https://www.w3.org/2018/credentials/v1"],type:["VerifiableCredential","IdentityCredential"],issuer:"did:demo:issuer-001",issuanceDate:r,expirationDate:t.toISOString(),credentialSubject:{id:o,name:e.name,birthDate:e.birth,address:e.address,gender:e.gender}},i=c(n);return{...n,proof:{type:"MockSignature2024",created:r,verificationMethod:"did:demo:issuer-001#key-1",jws:i}}},p=e=>{try{return localStorage.setItem("vc_wallet",JSON.stringify(e)),console.log("VC保存完了（実稼働ではプライベートウォレットに保存）"),!0}catch(r){return console.error("VC保存エラー:",r),!1}},s=()=>{try{const e=localStorage.getItem("vc_wallet");if(!e)return null;const r=JSON.parse(e);return!r.credentialSubject||!r.proof?(console.error("無効なVC構造"),null):r}catch(e){return console.error("VC取得エラー:",e),null}},S=()=>s()!==null,b=()=>{try{return localStorage.removeItem("vc_wallet"),console.log("VC削除完了"),!0}catch(e){return console.error("VC削除エラー:",e),!1}},v=e=>{try{const r=decodeURIComponent(escape(atob(e))),t=JSON.parse(r);return!t||!t.t||!t.iss?(console.error("VP構造エラー: 必要フィールドが不足"),!1):t.sig?(console.log("VP署名検証成功（QRコード用軽量署名）"),!0):g(t)}catch(r){return console.error("VP検証エラー:",r),!1}},g=e=>{try{const r=e.iss||"did:demo:issuer-001",t=u(r);if(!t)return console.error(`Issuer公開鍵が見つかりません: ${r}`),!1;const o=e.jws||e.proof&&e.proof.jws;return l(o,t)?(console.log("VC署名検証成功（実稼働では実際の暗号署名で検証）"),!0):(console.error("VC署名検証失敗"),!1)}catch(r){return console.error("署名検証エラー:",r),!1}},h=e=>{const r=s();if(!r)return console.error("VCが見つかりません"),null;let t;if(e==="identity")t={t:"identity",iss:"did:demo:issuer-001",name:r.credentialSubject.name,birth:r.credentialSubject.birthDate,addr:r.credentialSubject.address,ts:Math.floor(Date.now()/1e3)};else if(e==="age")t={t:"age",iss:"did:demo:issuer-001",birth:r.credentialSubject.birthDate,ts:Math.floor(Date.now()/1e3)};else return console.error("未対応のシナリオ:",e),null;r.proof&&r.proof.jws&&(t.sig=r.proof.jws.substring(0,16));const o=JSON.stringify(t);return btoa(unescape(encodeURIComponent(o)))};export{p as a,S as b,m as c,h as d,s as g,f as i,b as r,y as s,v};
